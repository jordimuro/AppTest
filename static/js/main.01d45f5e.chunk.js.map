{"version":3,"sources":["pages/Dashboard.js","components/TrainingConfigurator.js","components/WorkoutResult.js","components/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","navigate","useNavigate","React","createElement","Container","className","Card","Body","Row","Col","xs","md","Button","variant","onClick","src","alt","TrainingConfigurator","day","setDay","useState","exercise","setExercise","reps","setReps","series","setSeries","routine","setRoutine","savedRoutine","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","Form","onSubmit","e","preventDefault","Group","as","controlId","Label","column","sm","Control","value","onChange","target","type","ListGroup","filter","item","map","index","Item","key","size","newRoutine","_","i","handleDeleteExercise","exerciseImages","Sentadillas","Dominadas","Flexiones","Abdominales","Correr","WorkoutResult","Title","Img","Text","Schedule","hours","Table","bordered","hover","responsive","row","rowIndex","activity","colIndex","App","Router","Navbar","bg","expand","Brand","Link","to","Toggle","aria-controls","Collapse","id","Nav","Routes","Route","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01d45f5e.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css'; // Importa el archivo CSS\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Container className=\"text-center mt-5\">\n      <Card>\n        <Card.Body>\n          <Row className=\"justify-content-center\">\n            <Col xs={12} md={6} className=\"mb-3 mb-md-0\">\n              <Button variant=\"link\" onClick={() => navigate('/resultado')}>\n                <img src=\"/images/strength.png\" alt=\"Deporte de Fuerza\" className=\"dashboard-icon\" />\n              </Button>\n            </Col>\n            <Col xs={12} md={6}>\n              <Button variant=\"link\" onClick={() => navigate('/configurador')}>\n                <img src=\"/images/settings.png\" alt=\"ConfiguraciÃ³n\" className=\"dashboard-icon\" />\n              </Button>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Container, Row, Col, ListGroup } from 'react-bootstrap';\nimport './TrainingRoutine.css'; // Importa el archivo CSS\n\nconst exerciseImages = {\n  Sentadillas: '/images/sentadillas.png',\n  Dominadas: '/images/dominadas.png',\n  Flexiones: '/images/flexiones.png',\n  Abdominales: '/images/abdominales.gif',\n  Correr: '/images/correr.png',\n};\n\nconst TrainingConfigurator = () => {\n  const [day, setDay] = useState('Lunes');\n  const [exercise, setExercise] = useState('');\n  const [reps, setReps] = useState('');\n  const [series, setSeries] = useState('');\n  const [routine, setRoutine] = useState(() => {\n    const savedRoutine = localStorage.getItem('routine');\n    return savedRoutine ? JSON.parse(savedRoutine) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('routine', JSON.stringify(routine));\n  }, [routine]);\n\n  const handleAddExercise = (e) => {\n    e.preventDefault();\n    if (exercise && reps && series) {\n      setRoutine([...routine, { day, exercise, reps, series }]);\n      setExercise('');\n      setReps('');\n      setSeries('');\n    }\n  };\n\n  const handleDeleteExercise = (index) => {\n    const newRoutine = routine.filter((_, i) => i !== index);\n    setRoutine(newRoutine);\n  };\n\n  return (\n    <Container>\n      <h2>Configurador de Rutina</h2>\n      <Form onSubmit={handleAddExercise}>\n        <Form.Group as={Row} controlId=\"formDay\">\n          <Form.Label column sm={2}>DÃ­a de la semana:</Form.Label>\n          <Col sm={10}>\n            <Form.Control as=\"select\" value={day} onChange={(e) => setDay(e.target.value)}>\n              <option value=\"Lunes\">Lunes</option>\n              <option value=\"Martes\">Martes</option>\n              <option value=\"MiÃ©rcoles\">MiÃ©rcoles</option>\n              <option value=\"Jueves\">Jueves</option>\n              <option value=\"Viernes\">Viernes</option>\n              <option value=\"SÃ¡bado\">SÃ¡bado</option>\n              <option value=\"Domingo\">Domingo</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formExercise\">\n          <Form.Label column sm={2}>Ejercicio:</Form.Label>\n          <Col sm={10}>\n            <Form.Control as=\"select\" value={exercise} onChange={(e) => setExercise(e.target.value)}>\n              <option value=\"\">Selecciona un ejercicio</option>\n              <option value=\"Sentadillas\">Sentadillas</option>\n              <option value=\"Dominadas\">Dominadas</option>\n              <option value=\"Flexiones\">Flexiones</option>\n              <option value=\"Abdominales\">Abdominales</option>\n              <option value=\"Correr\">Correr</option>\n            </Form.Control>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formReps\">\n          <Form.Label column sm={2}>Repeticiones:</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"number\"\n              value={reps}\n              onChange={(e) => setReps(e.target.value)}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formSeries\">\n          <Form.Label column sm={2}>Num. Series:</Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"number\"\n              value={series}\n              onChange={(e) => setSeries(e.target.value)}\n            />\n          </Col>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">Agregar Ejercicio</Button>\n      </Form>\n      <div className=\"mt-4\">\n        <h3>ConfiguraciÃ³n Actual para {day}</h3>\n        <ListGroup>\n          {routine\n            .filter((item) => item.day === day)\n            .map((item, index) => (\n              <ListGroup.Item key={index} className=\"d-flex justify-content-between align-items-center\">\n                {item.exercise} - {item.series} series de {item.reps} repeticiones\n                <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteExercise(index)}>Eliminar</Button>\n              </ListGroup.Item>\n            ))}\n        </ListGroup>\n      </div>\n    </Container>\n  );\n};\n\nexport default TrainingConfigurator;","import React, { useState } from 'react';\nimport { Container, Form, ListGroup, Card, Row, Col } from 'react-bootstrap';\nimport './TrainingRoutine.css'; // Importa el archivo CSS\n\nconst exerciseImages = {\n  Sentadillas: '/images/sentadillas.png',\n  Dominadas: '/images/dominadas.png',\n  Flexiones: '/images/flexiones.png',\n  Abdominales: '/images/abdominales.gif',\n  Correr: '/images/correr.png',\n};\n\nconst WorkoutResult = () => {\n  const [day, setDay] = useState('Lunes');\n  const [routine, setRoutine] = useState(() => {\n    const savedRoutine = localStorage.getItem('routine');\n    return savedRoutine ? JSON.parse(savedRoutine) : [];\n  });\n\n  return (\n    <Container>\n      <h2>Resultado del Workout</h2>\n      <Form.Group as={Row} controlId=\"formDay\">\n        <Form.Label column sm={2}>DÃ­a de la semana:</Form.Label>\n        <Col sm={10}>\n          <Form.Control as=\"select\" value={day} onChange={(e) => setDay(e.target.value)}>\n            <option value=\"Lunes\">Lunes</option>\n            <option value=\"Martes\">Martes</option>\n            <option value=\"MiÃ©rcoles\">MiÃ©rcoles</option>\n            <option value=\"Jueves\">Jueves</option>\n            <option value=\"Viernes\">Viernes</option>\n            <option value=\"SÃ¡bado\">SÃ¡bado</option>\n            <option value=\"Domingo\">Domingo</option>\n          </Form.Control>\n        </Col>\n      </Form.Group>\n      <div>\n        <h3>Rutina para {day}</h3>\n        <ListGroup>\n          {routine\n            .filter((item) => item.day === day)\n            .map((item, index) => (\n              <ListGroup.Item key={index} className=\"mb-3\">\n                <Card>\n                  <Card.Body>\n                    <Card.Title>{item.exercise}</Card.Title>\n                    <Card.Img variant=\"top\" src={exerciseImages[item.exercise]} alt={item.exercise} className=\"exercise-image\" />\n                    <Card.Text className=\"mt-2\">\n                      {item.series} X {item.reps}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </ListGroup.Item>\n            ))}\n        </ListGroup>\n      </div>\n    </Container>\n  );\n};\n\nexport default WorkoutResult;","import React from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport './Schedule.css'; // Importa el archivo CSS\n\nconst Schedule = () => {\n    const hours = [\n        \"8:30 - 9:15\",\n        \"9:30 - 10:15\",\n        \"---\",\n        \"17:30 - 18:15\",\n        \"18:30 - 19:15\",\n        \"19:30 - 20:15\",\n        \"20:30 - 21:15\",\n      ];\n\n  const exampleData = [\n    [\"MANTENIMIENTO\",\"AEROSTEP\",\"BODY PAM\",\"AEROFITBALL\",\"ESTIRAMIENTOS\"],\n    [\"AEROFITBALL\",\"GLUTEBOOM\",\"CICLO INDOOR\",\"BODY PAM\",\"BODY BALANCE\"],\n    [\"---\",\"---\",\"---\",\"---\",\"---\"],\n    [\"CARDIO HIT\",\"BODY PAM\",\"CICLO INDOOR\",\"E.F.E (CIRCUITO)\",\"BODY BALANCE\"],\n    [\"BODY PAM\",\"BODY ATTACK\",\"TONO FUNCIONAL\",\"AEROJUMP\",\"LATINOS\"],\n    [\"STEP XTREME\",\"TONO FUNCIONAL\",\"T.B.C\",\"BODY COMBAT\",\"CICLO INDOOR\"],\n    [\"CORE & STRECH\",\"CICLO INDOOR\",\"GLUTEBOOM\",\"BODY PAM\",\"---\"]\n  ];\n\n  return (\n    <Container className=\"mt-5\">\n      <h2>Horario</h2>\n      <Table bordered hover responsive className=\"schedule-table\">\n        <thead>\n          <tr className=\"table-header\">\n            <th>Hora</th>\n            <th>Lunes</th>\n            <th>Martes</th>\n            <th>MiÃ©rcoles</th>\n            <th>Jueves</th>\n            <th>Viernes</th>\n          </tr>\n        </thead>\n        <tbody>\n        {exampleData.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              <td>{hours[rowIndex]}</td>\n              {row.map((activity, colIndex) => (\n                <td key={colIndex}>{activity}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default Schedule;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport Dashboard from './pages/Dashboard';\nimport TrainingConfigurator from './components/TrainingConfigurator';\nimport WorkoutResult from './components/WorkoutResult';\nimport Schedule from './components/Schedule';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Container>\n            <Navbar.Brand as={Link} to=\"/\">Training App</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"me-auto\">\n                <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\n                <Nav.Link as={Link} to=\"/configurador\">Configurador</Nav.Link>\n                <Nav.Link as={Link} to=\"/resultado\">Resultado</Nav.Link>\n                <Nav.Link as={Link} to=\"/horario\">Horario</Nav.Link>\n \n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <Container>\n          <Routes>\n            <Route path=\"/\" element={<Dashboard />} />\n            <Route path=\"/dashboard\" element={<Dashboard />} />\n            <Route path=\"/configurador\" element={<TrainingConfigurator />} />\n            <Route path=\"/resultado\" element={<WorkoutResult />} />\n            <Route path=\"/horario\" element={<Schedule />} />\n   \n          </Routes>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","// Este archivo es opcional y se puede eliminar si no se necesita el service worker\n\n// En producciÃ³n, se puede registrar un service worker para servir activos en cachÃ©.\n// Esto ayuda a que la aplicaciÃ³n cargue mÃ¡s rÃ¡pido en visitas subsecuentes en producciÃ³n,\n// y tambiÃ©n permite que funcione sin conexiÃ³n. Sin embargo, esto viene con algunas advertencias.\n// Aprende mÃ¡s sobre los service workers: https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] es la direcciÃ³n IPv6 localhost.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 son considerados localhost para IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // El constructor de URL estÃ¡ disponible en todos los navegadores que soportan SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Nuestro service worker no funcionarÃ¡ si PUBLIC_URL estÃ¡ en un origen diferente\n      // del que nuestra pÃ¡gina estÃ¡ sirviendo. Esto podrÃ­a suceder si un CDN se usa para\n      // servir activos; ver https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // Esto se estÃ¡ ejecutando en localhost. Vamos a comprobar si un service worker aÃºn existe o no.\n        checkValidServiceWorker(swUrl, config);\n\n        // AÃ±adir algunos registros adicionales a localhost, apuntando a los desarrolladores hacia el\n        // service worker/PWA documentaciÃ³n.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'Esta aplicaciÃ³n web estÃ¡ siendo servida en cachÃ© por un service worker.'\n          );\n        });\n      } else {\n        // No es localhost. Solo registrar el service worker.\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // En este punto, el contenido precacheado ha sido actualizado,\n              // pero el service worker anterior aÃºn servirÃ¡ el contenido antiguo\n              // hasta que todas las pestaÃ±as del cliente se cierren.\n              console.log(\n                'Nuevo contenido estÃ¡ disponible y se servirÃ¡ cuando todas las ' +\n                  'pestaÃ±as del cliente estÃ©n cerradas.'\n              );\n\n              // Ejecutar la devoluciÃ³n de llamada\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // En este punto, todo ha sido precacheado.\n              // Es el momento perfecto para mostrar un\n              // \"El contenido estÃ¡ en cachÃ© para su uso sin conexiÃ³n.\" mensaje.\n              console.log('El contenido estÃ¡ en cachÃ© para su uso sin conexiÃ³n.');\n\n              // Ejecutar la devoluciÃ³n de llamada\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error durante el registro del service worker:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Comprobar si el service worker puede ser encontrado. Si no puede recargar la pÃ¡gina.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Asegurarse de que el service worker existe, y que realmente estamos obteniendo un archivo JS.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No se encontrÃ³ ningÃºn service worker. Probablemente un diferente app. Recargar la pÃ¡gina.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker encontrado. Proceder como de costumbre.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No se encontrÃ³ conexiÃ³n a Internet. La aplicaciÃ³n estÃ¡ ejecutÃ¡ndose en modo sin conexiÃ³n.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}